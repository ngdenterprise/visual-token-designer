name: Build

on:
  push:
    branches: 
    - master
    - release/v*
  pull_request:
    branches:
    - master
    - release/v*

jobs:

  buildgrpc:
    strategy:
      matrix:
        # As of v1.49, both VS Code and VS Code Insiders use Electron 9.2.1
        electron-version: [ '9.2.1' ]
        runs-on: [ 'windows-2019', 'ubuntu-18.04', 'macos-10.15' ]
    runs-on: ${{ matrix.runs-on }}
    steps:
    - name: ⏳ Checkout
      uses: actions/checkout@v2
    - name: 💿 Setup NodeJS
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: 💾 Cache node_modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ matrix.electron-version }}-build-grpc-cache-node-modules-${{ hashFiles('**/package-lock.json') }}
    - name: 🚀 Build
      run: |
        npm install
        npm rebuild --target=${{ matrix.electron-version }} --runtime=electron --dist-url=https://atom.io/download/electron
    - name: 🌎 Publish
      uses: actions/upload-artifact@v2
      with:
        name: grpc-${{ matrix.runs-on }}-${{ matrix.electron-version }}
        path: node_modules/grpc/src/node/extension_binary/*electron*/**/*
  
  buildextension:
    runs-on: ubuntu-18.04
    needs: buildgrpc
    steps:
    - name: ⏳ Checkout
      uses: actions/checkout@v2
      # fetch-depth 0 needed due to https://github.com/dotnet/Nerdbank.GitVersioning/issues/423
      with:
        fetch-depth: 0
    - name: 💿 Setup NodeJS
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: 💿 Setup .NET Core SDK
      uses: actions/setup-dotnet@v1.5.0
      with:
        dotnet-version: 2.1.x
    - name: 💾 Get GRPC binaries
      uses: actions/download-artifact@v2
      with:
        path: grpc_artifacts
    - name: 🚀 Build
      run: |
        npm install
        for d in grpc_artifacts/* ; do mv ${d}/* node_modules/grpc/src/node/extension_binary/ ; done
        npm run compile
    - name: 🔢 Set version
      run: npm run setversion
    - name: 🎁 Package
      id: package
      shell: bash
      run: |
        npm run package
        cp visual-token-designer-*.vsix visual-token-designer.vsix
        echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        ls -l *.vsix
    - name: 🗑 Artifact cleanup
      uses: kolpav/purge-artifacts-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        expire-in: 24 hours
    - name: 🌎 Publish Artifact
      uses: actions/upload-artifact@v2
      with:
        name: vsix
        path: visual-token-designer-*.vsix
    - name: 🌎 Release
      uses: djnicholson/release-action@v2.4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag-name: v0.0-${{ steps.package.outputs.branch }}
        release-name: 'Rolling build'
        asset-name: 'visual-token-designer.vsix'
        file: 'visual-token-designer.vsix'
